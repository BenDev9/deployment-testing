name: Create Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: "The release version"
        required: true

jobs:
  update-files:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Update changelog
        uses: thomaseizinger/keep-a-changelog-new-release@v1
        with: 
          version: ${{ github.event.inputs.version }}

      - name: Log In with Github Actions
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      - name: Commit changelog
        run: |
          git add CHANGELOG.md
          git commit --message "Update changelog for ${{ github.event.inputs.version }}"
          git push

      - name: Build application
        shell: python
        run: |
          import time
          f = open("somefile.txt", "w")
          f.write(str(time.time()))
          f.close()

      - name: Commit Build
        run: |
          git add somefile.txt
          git commit --message "Create release ${{ github.event.inputs.version }}"
          git tag ${{ github.event.inputs.version }}
          git push --atomic origin main ${{ github.event.inputs.version }}
          
      - name: Check tag
        run: git tag -n
        
  create-release:
    runs-on: ubuntu-latest
    needs: [update-files]
    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Install python packages
        run: |
          pip install keepachangelog
      - name: Gather patch notes
        shell: python
        run: |
         import keepachangelog
         chlog = keepachangelog.to_raw_dict("CHANGELOG.md")
         print(chlog)
         notes = chlog[list(chlog.keys())[0]]
         print(notes)
         text = notes['raw']
         print(text)
         f = open("notes.txt", "w")
         f.write(text)
         f.close()
      - name: Create release    
        uses: ncipollo/release-action@v1
        with:
         artifacts: "notes.txt"
         bodyFile: "notes.txt"
         tag: ${{ github.event.inputs.version }}
